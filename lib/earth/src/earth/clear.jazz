;;;==============
;;;  GaeaScheme
;;;==============
;;;
;;;; Earth Clear
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module earth.clear jazz


(import (jazz.application)
        (jazz.graphic)
        (jazz.io)
        (jazz.markup)
        (jazz.platform)
        (jazz.process)
        (jazz.screen)
        (gaea.engine)
        (gaea.engine.metal)
        (gaea.geometry)
        (gaea.metal)
        (gaea.opengl)
        (gaea.opengl.glew)
        (gaea.program)
        (gaea.shader)
        (gaea.window))


;;;
;;;; Window
;;;


(class Clear-Window extends Gaea-Window
  
  
  (form
    (<install> caption-base: "Clear"))
  
  
  (method override (destroy self)
    (stop-render self)
    (nextmethod self))
  
  
  (method override (setup-engine self)
    (start-render self))
  
  
  ;;;
  ;;;; Resize
  ;;;
  
  
  (method override (resize-scene self width <fl> height <fl>)
    (when (opengl?)
      ;; Viewport
      (let ((scale-factor (main-screen-scale-factor)))
        (glViewport 0 0 (* scale-factor (fxround width)) (* scale-factor (fxround height))))))
  
  
  ;;;
  ;;;; Draw
  ;;;
  
  
  (method override (draw-scene self)
    (if (opengl?)
        (begin
          ;; Background
          (glClearColor 0.0 0.0 1.0 0.0)
          (glClear (bitwise-ior GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT)))
      (let ((layer (get-window-layer self)))
        (let ((drawable (metalLayerNextDrawable layer)))
          (let ((buffer (metalMakeCommandBuffer))
                (pass (metalMakeRenderPassDescriptorClear drawable 0. 0. 1.)))
            (let ((encoder (metalMakeRenderCommandEncoder buffer pass)))
              (metalEndEncoding encoder)
              (metalPresentDrawable drawable buffer)
              (metalCommit buffer))))))))


;;;
;;;; Application
;;;


(class Clear-Application extends Application
  
  
  (method override (new-toplevel self)
    (new Clear-Window position: {Point 200 150} size: {Dimension 800 500})))


;;;
;;;; Run
;;;


(definition (run-clear descriptor)
  (boot-environment (new Clear-Application)))


(register-product-run 'earth.clear
  run-clear))
